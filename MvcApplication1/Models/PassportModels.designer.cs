#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.34003
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MvcApplication1.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="aspnet-MvcApplication1-20141021183026")]
	public partial class PassportModelsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void Insertgda_passport(gda_passport instance);
    partial void Updategda_passport(gda_passport instance);
    partial void Deletegda_passport(gda_passport instance);
    partial void Insertwebpages_Membership(webpages_Membership instance);
    partial void Updatewebpages_Membership(webpages_Membership instance);
    partial void Deletewebpages_Membership(webpages_Membership instance);
    #endregion
		
		public PassportModelsDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["aspnet_MvcApplication1_20141021183026ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PassportModelsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PassportModelsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PassportModelsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PassportModelsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<gda_passport> gda_passport
		{
			get
			{
				return this.GetTable<gda_passport>();
			}
		}
		
		public System.Data.Linq.Table<webpages_Membership> webpages_Membership
		{
			get
			{
				return this.GetTable<webpages_Membership>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.gda_passport")]
	public partial class gda_passport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _id_user;
		
		private string _surname;
		
		private string _name;
		
		private string _patronymic;
		
		private System.DateTime _born;
		
		private string _kingdom;
		
		private int _gender;
		
		private int _marital_status;
		
		private string _family_surname;
		
		private string _family_name;
		
		private string _family_patronymic;
		
		private string _family_who_registered;
		
		private System.Nullable<System.DateTime> _family_when_registered;
		
		private string _mom_surname;
		
		private string _mom_name;
		
		private string _mom_patronymic;
		
		private string _father_surname;
		
		private string _father_name;
		
		private string _father_patronymic;
		
		private string _residence_city;
		
		private string _residence_house;
		
		private string _residence_apartment;
		
		private int _foreign_citizenship;
		
		private string _foreign_citizenship_where;
		
		private System.Nullable<System.DateTime> _foreign_citizenship_now;
		
		private string _reason_for_issuing;
		
		private System.DateTime _date_of_filling;
		
		private EntityRef<webpages_Membership> _webpages_Membership;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void Onid_userChanging(int value);
    partial void Onid_userChanged();
    partial void OnsurnameChanging(string value);
    partial void OnsurnameChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpatronymicChanging(string value);
    partial void OnpatronymicChanged();
    partial void OnbornChanging(System.DateTime value);
    partial void OnbornChanged();
    partial void OnkingdomChanging(string value);
    partial void OnkingdomChanged();
    partial void OngenderChanging(int value);
    partial void OngenderChanged();
    partial void Onmarital_statusChanging(int value);
    partial void Onmarital_statusChanged();
    partial void Onfamily_surnameChanging(string value);
    partial void Onfamily_surnameChanged();
    partial void Onfamily_nameChanging(string value);
    partial void Onfamily_nameChanged();
    partial void Onfamily_patronymicChanging(string value);
    partial void Onfamily_patronymicChanged();
    partial void Onfamily_who_registeredChanging(string value);
    partial void Onfamily_who_registeredChanged();
    partial void Onfamily_when_registeredChanging(System.Nullable<System.DateTime> value);
    partial void Onfamily_when_registeredChanged();
    partial void Onmom_surnameChanging(string value);
    partial void Onmom_surnameChanged();
    partial void Onmom_nameChanging(string value);
    partial void Onmom_nameChanged();
    partial void Onmom_patronymicChanging(string value);
    partial void Onmom_patronymicChanged();
    partial void Onfather_surnameChanging(string value);
    partial void Onfather_surnameChanged();
    partial void Onfather_nameChanging(string value);
    partial void Onfather_nameChanged();
    partial void Onfather_patronymicChanging(string value);
    partial void Onfather_patronymicChanged();
    partial void Onresidence_cityChanging(string value);
    partial void Onresidence_cityChanged();
    partial void Onresidence_houseChanging(string value);
    partial void Onresidence_houseChanged();
    partial void Onresidence_apartmentChanging(string value);
    partial void Onresidence_apartmentChanged();
    partial void Onforeign_citizenshipChanging(int value);
    partial void Onforeign_citizenshipChanged();
    partial void Onforeign_citizenship_whereChanging(string value);
    partial void Onforeign_citizenship_whereChanged();
    partial void Onforeign_citizenship_nowChanging(System.Nullable<System.DateTime> value);
    partial void Onforeign_citizenship_nowChanged();
    partial void Onreason_for_issuingChanging(string value);
    partial void Onreason_for_issuingChanged();
    partial void Ondate_of_fillingChanging(System.DateTime value);
    partial void Ondate_of_fillingChanged();
    #endregion
		
		public gda_passport()
		{
			this._webpages_Membership = default(EntityRef<webpages_Membership>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_user", DbType="Int NOT NULL")]
		public int id_user
		{
			get
			{
				return this._id_user;
			}
			set
			{
				if ((this._id_user != value))
				{
					if (this._webpages_Membership.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_userChanging(value);
					this.SendPropertyChanging();
					this._id_user = value;
					this.SendPropertyChanged("id_user");
					this.Onid_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_surname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string surname
		{
			get
			{
				return this._surname;
			}
			set
			{
				if ((this._surname != value))
				{
					this.OnsurnameChanging(value);
					this.SendPropertyChanging();
					this._surname = value;
					this.SendPropertyChanged("surname");
					this.OnsurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patronymic", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string patronymic
		{
			get
			{
				return this._patronymic;
			}
			set
			{
				if ((this._patronymic != value))
				{
					this.OnpatronymicChanging(value);
					this.SendPropertyChanging();
					this._patronymic = value;
					this.SendPropertyChanged("patronymic");
					this.OnpatronymicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_born", DbType="DateTime NOT NULL")]
		public System.DateTime born
		{
			get
			{
				return this._born;
			}
			set
			{
				if ((this._born != value))
				{
					this.OnbornChanging(value);
					this.SendPropertyChanging();
					this._born = value;
					this.SendPropertyChanged("born");
					this.OnbornChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kingdom", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string kingdom
		{
			get
			{
				return this._kingdom;
			}
			set
			{
				if ((this._kingdom != value))
				{
					this.OnkingdomChanging(value);
					this.SendPropertyChanging();
					this._kingdom = value;
					this.SendPropertyChanged("kingdom");
					this.OnkingdomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="Int NOT NULL")]
		public int gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_marital_status", DbType="Int NOT NULL")]
		public int marital_status
		{
			get
			{
				return this._marital_status;
			}
			set
			{
				if ((this._marital_status != value))
				{
					this.Onmarital_statusChanging(value);
					this.SendPropertyChanging();
					this._marital_status = value;
					this.SendPropertyChanged("marital_status");
					this.Onmarital_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_family_surname", DbType="VarChar(50)")]
		public string family_surname
		{
			get
			{
				return this._family_surname;
			}
			set
			{
				if ((this._family_surname != value))
				{
					this.Onfamily_surnameChanging(value);
					this.SendPropertyChanging();
					this._family_surname = value;
					this.SendPropertyChanged("family_surname");
					this.Onfamily_surnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_family_name", DbType="VarChar(50)")]
		public string family_name
		{
			get
			{
				return this._family_name;
			}
			set
			{
				if ((this._family_name != value))
				{
					this.Onfamily_nameChanging(value);
					this.SendPropertyChanging();
					this._family_name = value;
					this.SendPropertyChanged("family_name");
					this.Onfamily_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_family_patronymic", DbType="VarChar(50)")]
		public string family_patronymic
		{
			get
			{
				return this._family_patronymic;
			}
			set
			{
				if ((this._family_patronymic != value))
				{
					this.Onfamily_patronymicChanging(value);
					this.SendPropertyChanging();
					this._family_patronymic = value;
					this.SendPropertyChanged("family_patronymic");
					this.Onfamily_patronymicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_family_who_registered", DbType="VarChar(50)")]
		public string family_who_registered
		{
			get
			{
				return this._family_who_registered;
			}
			set
			{
				if ((this._family_who_registered != value))
				{
					this.Onfamily_who_registeredChanging(value);
					this.SendPropertyChanging();
					this._family_who_registered = value;
					this.SendPropertyChanged("family_who_registered");
					this.Onfamily_who_registeredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_family_when_registered", DbType="DateTime")]
		public System.Nullable<System.DateTime> family_when_registered
		{
			get
			{
				return this._family_when_registered;
			}
			set
			{
				if ((this._family_when_registered != value))
				{
					this.Onfamily_when_registeredChanging(value);
					this.SendPropertyChanging();
					this._family_when_registered = value;
					this.SendPropertyChanged("family_when_registered");
					this.Onfamily_when_registeredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mom_surname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string mom_surname
		{
			get
			{
				return this._mom_surname;
			}
			set
			{
				if ((this._mom_surname != value))
				{
					this.Onmom_surnameChanging(value);
					this.SendPropertyChanging();
					this._mom_surname = value;
					this.SendPropertyChanged("mom_surname");
					this.Onmom_surnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mom_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string mom_name
		{
			get
			{
				return this._mom_name;
			}
			set
			{
				if ((this._mom_name != value))
				{
					this.Onmom_nameChanging(value);
					this.SendPropertyChanging();
					this._mom_name = value;
					this.SendPropertyChanged("mom_name");
					this.Onmom_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mom_patronymic", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string mom_patronymic
		{
			get
			{
				return this._mom_patronymic;
			}
			set
			{
				if ((this._mom_patronymic != value))
				{
					this.Onmom_patronymicChanging(value);
					this.SendPropertyChanging();
					this._mom_patronymic = value;
					this.SendPropertyChanged("mom_patronymic");
					this.Onmom_patronymicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_father_surname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string father_surname
		{
			get
			{
				return this._father_surname;
			}
			set
			{
				if ((this._father_surname != value))
				{
					this.Onfather_surnameChanging(value);
					this.SendPropertyChanging();
					this._father_surname = value;
					this.SendPropertyChanged("father_surname");
					this.Onfather_surnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_father_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string father_name
		{
			get
			{
				return this._father_name;
			}
			set
			{
				if ((this._father_name != value))
				{
					this.Onfather_nameChanging(value);
					this.SendPropertyChanging();
					this._father_name = value;
					this.SendPropertyChanged("father_name");
					this.Onfather_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_father_patronymic", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string father_patronymic
		{
			get
			{
				return this._father_patronymic;
			}
			set
			{
				if ((this._father_patronymic != value))
				{
					this.Onfather_patronymicChanging(value);
					this.SendPropertyChanging();
					this._father_patronymic = value;
					this.SendPropertyChanged("father_patronymic");
					this.Onfather_patronymicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_residence_city", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string residence_city
		{
			get
			{
				return this._residence_city;
			}
			set
			{
				if ((this._residence_city != value))
				{
					this.Onresidence_cityChanging(value);
					this.SendPropertyChanging();
					this._residence_city = value;
					this.SendPropertyChanged("residence_city");
					this.Onresidence_cityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_residence_house", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string residence_house
		{
			get
			{
				return this._residence_house;
			}
			set
			{
				if ((this._residence_house != value))
				{
					this.Onresidence_houseChanging(value);
					this.SendPropertyChanging();
					this._residence_house = value;
					this.SendPropertyChanged("residence_house");
					this.Onresidence_houseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_residence_apartment", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string residence_apartment
		{
			get
			{
				return this._residence_apartment;
			}
			set
			{
				if ((this._residence_apartment != value))
				{
					this.Onresidence_apartmentChanging(value);
					this.SendPropertyChanging();
					this._residence_apartment = value;
					this.SendPropertyChanged("residence_apartment");
					this.Onresidence_apartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foreign_citizenship", DbType="Int NOT NULL")]
		public int foreign_citizenship
		{
			get
			{
				return this._foreign_citizenship;
			}
			set
			{
				if ((this._foreign_citizenship != value))
				{
					this.Onforeign_citizenshipChanging(value);
					this.SendPropertyChanging();
					this._foreign_citizenship = value;
					this.SendPropertyChanged("foreign_citizenship");
					this.Onforeign_citizenshipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foreign_citizenship_where", DbType="VarChar(50)")]
		public string foreign_citizenship_where
		{
			get
			{
				return this._foreign_citizenship_where;
			}
			set
			{
				if ((this._foreign_citizenship_where != value))
				{
					this.Onforeign_citizenship_whereChanging(value);
					this.SendPropertyChanging();
					this._foreign_citizenship_where = value;
					this.SendPropertyChanged("foreign_citizenship_where");
					this.Onforeign_citizenship_whereChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foreign_citizenship_now", DbType="DateTime")]
		public System.Nullable<System.DateTime> foreign_citizenship_now
		{
			get
			{
				return this._foreign_citizenship_now;
			}
			set
			{
				if ((this._foreign_citizenship_now != value))
				{
					this.Onforeign_citizenship_nowChanging(value);
					this.SendPropertyChanging();
					this._foreign_citizenship_now = value;
					this.SendPropertyChanged("foreign_citizenship_now");
					this.Onforeign_citizenship_nowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reason_for_issuing", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string reason_for_issuing
		{
			get
			{
				return this._reason_for_issuing;
			}
			set
			{
				if ((this._reason_for_issuing != value))
				{
					this.Onreason_for_issuingChanging(value);
					this.SendPropertyChanging();
					this._reason_for_issuing = value;
					this.SendPropertyChanged("reason_for_issuing");
					this.Onreason_for_issuingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_of_filling", DbType="DateTime NOT NULL")]
		public System.DateTime date_of_filling
		{
			get
			{
				return this._date_of_filling;
			}
			set
			{
				if ((this._date_of_filling != value))
				{
					this.Ondate_of_fillingChanging(value);
					this.SendPropertyChanging();
					this._date_of_filling = value;
					this.SendPropertyChanged("date_of_filling");
					this.Ondate_of_fillingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="webpages_Membership_gda_passport", Storage="_webpages_Membership", ThisKey="id_user", OtherKey="UserId", IsForeignKey=true)]
		public webpages_Membership webpages_Membership
		{
			get
			{
				return this._webpages_Membership.Entity;
			}
			set
			{
				webpages_Membership previousValue = this._webpages_Membership.Entity;
				if (((previousValue != value) 
							|| (this._webpages_Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._webpages_Membership.Entity = null;
						previousValue.gda_passport.Remove(this);
					}
					this._webpages_Membership.Entity = value;
					if ((value != null))
					{
						value.gda_passport.Add(this);
						this._id_user = value.UserId;
					}
					else
					{
						this._id_user = default(int);
					}
					this.SendPropertyChanged("webpages_Membership");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.webpages_Membership")]
	public partial class webpages_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _ConfirmationToken;
		
		private System.Nullable<bool> _IsConfirmed;
		
		private System.Nullable<System.DateTime> _LastPasswordFailureDate;
		
		private int _PasswordFailuresSinceLastSuccess;
		
		private string _Password;
		
		private System.Nullable<System.DateTime> _PasswordChangedDate;
		
		private string _PasswordSalt;
		
		private string _PasswordVerificationToken;
		
		private System.Nullable<System.DateTime> _PasswordVerificationTokenExpirationDate;
		
		private EntitySet<gda_passport> _gda_passport;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnConfirmationTokenChanging(string value);
    partial void OnConfirmationTokenChanged();
    partial void OnIsConfirmedChanging(System.Nullable<bool> value);
    partial void OnIsConfirmedChanged();
    partial void OnLastPasswordFailureDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastPasswordFailureDateChanged();
    partial void OnPasswordFailuresSinceLastSuccessChanging(int value);
    partial void OnPasswordFailuresSinceLastSuccessChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordChangedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPasswordChangedDateChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnPasswordVerificationTokenChanging(string value);
    partial void OnPasswordVerificationTokenChanged();
    partial void OnPasswordVerificationTokenExpirationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPasswordVerificationTokenExpirationDateChanged();
    #endregion
		
		public webpages_Membership()
		{
			this._gda_passport = new EntitySet<gda_passport>(new Action<gda_passport>(this.attach_gda_passport), new Action<gda_passport>(this.detach_gda_passport));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmationToken", DbType="NVarChar(128)")]
		public string ConfirmationToken
		{
			get
			{
				return this._ConfirmationToken;
			}
			set
			{
				if ((this._ConfirmationToken != value))
				{
					this.OnConfirmationTokenChanging(value);
					this.SendPropertyChanging();
					this._ConfirmationToken = value;
					this.SendPropertyChanged("ConfirmationToken");
					this.OnConfirmationTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsConfirmed", DbType="Bit")]
		public System.Nullable<bool> IsConfirmed
		{
			get
			{
				return this._IsConfirmed;
			}
			set
			{
				if ((this._IsConfirmed != value))
				{
					this.OnIsConfirmedChanging(value);
					this.SendPropertyChanging();
					this._IsConfirmed = value;
					this.SendPropertyChanged("IsConfirmed");
					this.OnIsConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordFailureDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastPasswordFailureDate
		{
			get
			{
				return this._LastPasswordFailureDate;
			}
			set
			{
				if ((this._LastPasswordFailureDate != value))
				{
					this.OnLastPasswordFailureDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordFailureDate = value;
					this.SendPropertyChanged("LastPasswordFailureDate");
					this.OnLastPasswordFailureDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFailuresSinceLastSuccess", DbType="Int NOT NULL")]
		public int PasswordFailuresSinceLastSuccess
		{
			get
			{
				return this._PasswordFailuresSinceLastSuccess;
			}
			set
			{
				if ((this._PasswordFailuresSinceLastSuccess != value))
				{
					this.OnPasswordFailuresSinceLastSuccessChanging(value);
					this.SendPropertyChanging();
					this._PasswordFailuresSinceLastSuccess = value;
					this.SendPropertyChanged("PasswordFailuresSinceLastSuccess");
					this.OnPasswordFailuresSinceLastSuccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordChangedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PasswordChangedDate
		{
			get
			{
				return this._PasswordChangedDate;
			}
			set
			{
				if ((this._PasswordChangedDate != value))
				{
					this.OnPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._PasswordChangedDate = value;
					this.SendPropertyChanged("PasswordChangedDate");
					this.OnPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordVerificationToken", DbType="NVarChar(128)")]
		public string PasswordVerificationToken
		{
			get
			{
				return this._PasswordVerificationToken;
			}
			set
			{
				if ((this._PasswordVerificationToken != value))
				{
					this.OnPasswordVerificationTokenChanging(value);
					this.SendPropertyChanging();
					this._PasswordVerificationToken = value;
					this.SendPropertyChanged("PasswordVerificationToken");
					this.OnPasswordVerificationTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordVerificationTokenExpirationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PasswordVerificationTokenExpirationDate
		{
			get
			{
				return this._PasswordVerificationTokenExpirationDate;
			}
			set
			{
				if ((this._PasswordVerificationTokenExpirationDate != value))
				{
					this.OnPasswordVerificationTokenExpirationDateChanging(value);
					this.SendPropertyChanging();
					this._PasswordVerificationTokenExpirationDate = value;
					this.SendPropertyChanged("PasswordVerificationTokenExpirationDate");
					this.OnPasswordVerificationTokenExpirationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="webpages_Membership_gda_passport", Storage="_gda_passport", ThisKey="UserId", OtherKey="id_user")]
		public EntitySet<gda_passport> gda_passport
		{
			get
			{
				return this._gda_passport;
			}
			set
			{
				this._gda_passport.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_gda_passport(gda_passport entity)
		{
			this.SendPropertyChanging();
			entity.webpages_Membership = this;
		}
		
		private void detach_gda_passport(gda_passport entity)
		{
			this.SendPropertyChanging();
			entity.webpages_Membership = null;
		}
	}
}
#pragma warning restore 1591
